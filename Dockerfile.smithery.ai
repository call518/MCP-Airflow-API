# This Dockerfile is exclusively for smithery.ai.

FROM rockylinux:9.3

ARG PYTHON_VERSION=3.11

### Wait for Build Completion of pypi.org
# ADD https://httpbin.org/uuid /tmp/uuid
# RUN cat /tmp/uuid >/dev/null && \
#     for i in $(seq 120 -1 1); do \
#       echo "Waiting... $i seconds remaining"; \
#       sleep 1; \
#     done

# Base dependencies
RUN dnf install -y python${PYTHON_VERSION} python${PYTHON_VERSION}-pip git && dnf clean all \
        && update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 1000 --slave /usr/bin/pip pip /usr/bin/pip${PYTHON_VERSION}

### Wait for Build Completion of pypi.org
ADD https://httpbin.org/uuid /tmp/uuid
RUN cat /tmp/uuid >/dev/null && \
    for i in $(seq 2 -1 1); do \
      echo "Waiting... $i seconds remaining"; \
      sleep 1; \
    done

# Set working directory
WORKDIR /app

# Copy local source code
COPY . /app

# Debug git tags and update version
RUN echo "=== DEBUG GIT INFO ===" && \
    pwd && \
    ls -la && \
    echo "Git status:" && \
    git status || echo "Git status failed" && \
    echo "Available git tags:" && \
    git tag || echo "No tags found" && \
    echo "Last tag:" && \
    LAST_TAG=$(git tag | tail -n 1) && \
    echo "LAST_TAG='$LAST_TAG'" && \
    echo "Tag length: ${#LAST_TAG}" && \
    if [ -n "$LAST_TAG" ]; then \
        echo "Using tag: $LAST_TAG"; \
        sed -i "s|^version = \".*\"|version = \"${LAST_TAG}\"|" pyproject.toml; \
    else \
        echo "No tags found, keeping original version"; \
    fi && \
    echo "Final pyproject.toml version line:" && \
    grep "^version =" pyproject.toml && \
    echo "=== END DEBUG ==="

# ...existing code...

# RUN pip install --upgrade \
#         'uv>=0.8.5' \
#         'mcp>=1.12.3' \
#         'fastmcp>=2.11.1' \
#         'mcpo>=0.0.17' \
#         'requests>=2.32.4' \
#         'uvicorn>=0.35.0' \
#         'aiohttp>=3.12.15' \
#         'pytest>=8.2.0' \
#         'mcp-airflow-api'

RUN pip install --upgrade 'uv>=0.8.5'

RUN uv sync

RUN pip install .

CMD ["mcp-airflow-api"]
